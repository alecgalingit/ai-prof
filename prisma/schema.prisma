generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  lectures Lecture[] // Relation to lectures uploaded by this user
}

model Password {
  hash String
  
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Lecture {
  id          String   @id @default(cuid())
  title       String
  numSlides   Int?
  description String?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  status      UploadStatus @default(PROCESSING)
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  slides      Slide[]  

  @@index([userId])
}

model Slide {
  id          String   @id @default(cuid())
  slideNumber Int    
  base64      String       
  
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  lecture      Lecture  @relation(fields: [lectureId], references: [id], onDelete: Cascade)
  lectureId    String
  userId       String     @map("lecture_userId")

  @@unique([lectureId, slideNumber]) 
  @@index([lectureId, slideNumber])
}

enum UploadStatus {
  PROCESSING
  READY    
  FAILED    
}